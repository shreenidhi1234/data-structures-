#include <stdio.h>

#include <stdlib.h>

#define MAX_SIZE 10

int hashTable[MAX_SIZE];

// Function to insert a key into the hash table using linear probing

void insert(int key) {

    int index = key % MAX_SIZE;

    int i = 0;

    while (hashTable[(index + i) % MAX_SIZE] != -1) {

        i++;

    }

    hashTable[(index + i) % MAX_SIZE] = key;

}

// Function to search for a key in the hash table using linear probing

int search(int key) {

    int index = key % MAX_SIZE;

    int i = 0;

    while (hashTable[(index + i) % MAX_SIZE] != key) {

        i++;

        if (i == MAX_SIZE) {

            return -1;

        }

    }

    return (index + i) % MAX_SIZE;

}

int main() {

    // Initialize the hash table with -1

    for (int i = 0; i < MAX_SIZE; i++) {

        hashTable[i] = -1;

    }

    // Insert some keys into the hash table

    insert(10);

    insert(20);

    insert(30);

    insert(40);

    // Search for a key in the hash table

    int index = search(30);

    if (index == -1) {

        printf("Key not found in the hash table\n");

    } else {

        printf("Key found at index %d\n", index);

    }

    return 0;

}
